<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>
<groupId>ru.croc.ctp.tn</groupId>
<artifactId>aksmr</artifactId>
<version>0.0.1-SNAPSHOT</version>
<packaging>war</packaging>

<parent>
    <groupId>ru.croc.ctp.cmf</groupId>
    <artifactId>cmf-parent</artifactId>
    <version>1.7.0</version>
</parent>

<repositories>
<repository>
    <id>lib</id>
    <url>file:./m2</url>
</repository>
</repositories>


<properties>
    <cmf.version>1.7.0</cmf.version>
    <templates.output>${project.build.directory}/generated-resources-web</templates.output>
    <deployment.artifact.id>${project.artifactId}</deployment.artifact.id>

    <cmf.dms.classifier>prod</cmf.dms.classifier>
    <cmf.dms.grunt.build.args>build:prod</cmf.dms.grunt.build.args>
    <!--Задается в профилях aspose и jod -->
    <transformer.type>none</transformer.type>


    <ui.codemirror.version>5.47.0</ui.codemirror.version>
</properties>

<dependencies>
    <!-- Здесь объявляем для того, чтобы артефакт собирался после заданного -->
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-ui</artifactId>
        <version>${cmf.version}</version>
        <type>pom</type>
        <scope>provided</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-appicon-ui</artifactId>
        <version>${cmf.version}</version>
        <type>pom</type>
        <scope>provided</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-bookmarks-ui</artifactId>
        <version>${cmf.version}</version>
        <type>pom</type>
        <scope>provided</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-info-ui</artifactId>
        <version>${cmf.version}</version>
        <type>pom</type>
        <scope>provided</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-dictionary-model-extension-ui</artifactId>
        <version>${cmf.version}</version>
        <type>pom</type>
        <scope>provided</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-dictionary-common-ui</artifactId>
        <version>${cmf.version}</version>
        <type>pom</type>
        <scope>provided</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-dictionary-security-ui</artifactId>
        <version>${cmf.version}</version>
        <type>pom</type>
        <scope>provided</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-dictionary-user-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-dictionary-employee-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-dictionary-position-description-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-dictionary-role-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-dictionary-orgstructure-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-security-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-task-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-mainpage-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-document-regnumber-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-report-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-comment-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-document-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-document-approval-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-document-process-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-commission-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-theme-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-search-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-common-ui</artifactId>
        <type>pom</type>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>

    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-transform-starter</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-regnumber-starter</artifactId>
        <version>${cmf.version}</version>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-regnumber-counter</artifactId>
        <version>${cmf.version}</version>
        <scope>runtime</scope>
    </dependency>
<!--            <dependency>-->
<!--                <groupId>ru.croc.ctp.cmf</groupId>-->
<!--                <artifactId>cmf-content-cmis</artifactId>-->
<!--                <version>${cmf.version}</version>-->
<!--                <scope>runtime</scope>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>ru.croc.ctp.cmf</groupId>-->
<!--                <artifactId>cmf-content-db</artifactId>-->
<!--                <version>${cmf.version}</version>-->
<!--                <scope>runtime</scope>-->
<!--            </dependency>-->
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-content-file</artifactId>
        <version>${cmf.version}</version>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-content-starter</artifactId>
        <version>${cmf.version}</version>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-validation-starter</artifactId>
        <version>${cmf.version}</version>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-validation-task</artifactId>
        <version>${cmf.version}</version>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-tempstore-starter</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-workingtime-starter</artifactId>
        <version>${cmf.version}</version>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-task-starter</artifactId>
        <version>${cmf.version}</version>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dashboard-starter</artifactId>
        <version>${cmf.version}</version>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-security-starter</artifactId>
        <version>${cmf.version}</version>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-process</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-process-starter</artifactId>
        <version>${cmf.version}</version>
        <scope>runtime</scope>
    </dependency>

    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-dictionary-orgstructure</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-dictionary-security</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-audit</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-security</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp</groupId>
        <artifactId>jxfw-security-ldap</artifactId>
        <version>1.9.0</version>
    </dependency>
    <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-ldap</artifactId>
        <version>5.0.7.RELEASE</version>
    </dependency>
    <dependency>
        <groupId>org.springframework.security.kerberos</groupId>
        <artifactId>spring-security-kerberos-core</artifactId>
        <version>1.0.1.RELEASE</version>
    </dependency>
    <dependency>
        <groupId>org.springframework.security.kerberos</groupId>
        <artifactId>spring-security-kerberos-web</artifactId>
        <version>1.0.1.RELEASE</version>
    </dependency>
    <dependency>
        <groupId>org.springframework.security.kerberos</groupId>
        <artifactId>spring-security-kerberos-client</artifactId>
        <version>1.0.1.RELEASE</version>
    </dependency>
    <dependency>
        <groupId>com.github.ulisesbocchio</groupId>
        <artifactId>jasypt-spring-boot-starter</artifactId>
        <version>2.1.1</version>
    </dependency>
    <dependency>
    <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-client-web</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-mail</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-rendition</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-comment</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-bookmarks</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-journal</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-dashboard</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-lock</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-content</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-document-core</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-document-approval</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-document-regnumber</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-document-process</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-document-search</artifactId>
        <version>${cmf.version}</version>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-process</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-task</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
<!--            <dependency>-->
<!--                <groupId>ru.croc.ctp.cmf</groupId>-->
<!--                <artifactId>cmf-dms-task-mail</artifactId>-->
<!--                <version>${cmf.version}</version>-->
<!--                <scope>compile</scope>-->
<!--            </dependency>-->
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-commission</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-commission-search</artifactId>
        <version>${cmf.version}</version>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-search</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-document-search</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-report</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dms-data</artifactId>
        <version>${cmf.version}</version>
        <scope>runtime</scope>
    </dependency>

    <!-- Не ясно, почему без этого не берёт модель. -->
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-dashboard</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
        <optional>true</optional>
    </dependency>


    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
        <version>2.0.4.RELEASE</version>
    </dependency>
    <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <scope>runtime</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <scope>runtime</scope>
        <optional>true</optional>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-tomcat</artifactId>
        <scope>provided</scope>
        <version>2.0.4.RELEASE</version>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <scope>runtime</scope>
        <version>2.0.4.RELEASE</version>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-thymeleaf</artifactId>
        <version>2.0.4.RELEASE</version>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-integration</artifactId>
        <version>2.0.4.RELEASE</version>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-batch</artifactId>
        <version>2.0.4.RELEASE</version>
        <scope>runtime</scope>
    </dependency>
    <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-web</artifactId>
        <version>5.0.7.RELEASE</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-config</artifactId>
        <version>5.0.7.RELEASE</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-configuration-processor</artifactId>
        <scope>compile</scope>
        <optional>true</optional>
        <version>2.0.4.RELEASE</version>
    </dependency>
    <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-websocket</artifactId>
        <version>5.0.8.RELEASE</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-websocket</artifactId>
        <scope>runtime</scope>
        <version>2.0.4.RELEASE</version>
    </dependency>

    <dependency>
        <groupId>ru.croc.ctp</groupId>
        <artifactId>jxfw-wc-loader</artifactId>
        <scope>compile</scope>
        <version>1.9.0</version>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp</groupId>
        <artifactId>jxfw-jpa-compile</artifactId>
        <scope>compile</scope>
        <version>1.9.0</version>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp</groupId>
        <artifactId>jxfw-security</artifactId>
        <scope>compile</scope>
        <version>1.9.0</version>
    </dependency>

    <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-core</artifactId>
        <scope>compile</scope>
    </dependency>

    <!-- Аннотации JSR305 -->
    <dependency>
        <groupId>ru.croc.ctp.cmf</groupId>
        <artifactId>cmf-jsr305</artifactId>
        <version>${cmf.version}</version>
        <scope>compile</scope>
    </dependency>
    <dependency>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-annotations</artifactId>
    </dependency>

    <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <scope>test</scope>
    </dependency>

    <dependency>
        <groupId>ru.paratype</groupId>
        <artifactId>pt-sans</artifactId>
        <scope>runtime</scope>
    </dependency>

    <dependency>
        <groupId>ru.croc.ctp</groupId>
        <artifactId>jxfw-reporting-birt</artifactId>
        <scope>compile</scope>
        <version>1.9.0</version>
    </dependency>


    <dependency>
        <groupId>com.innoventsolutions</groupId>
        <artifactId>birt.controls.lib</artifactId>
        <scope>runtime</scope>
    </dependency>

    <dependency>
        <groupId>org.apache.pdfbox</groupId>
        <artifactId>pdfbox</artifactId>
        <version>${pdfbox.version}</version>
    </dependency>
    <dependency>
        <groupId>org.apache.pdfbox</groupId>
        <artifactId>fontbox</artifactId>
        <version>${pdfbox.version}</version>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp</groupId>
        <artifactId>ctp-scheduler</artifactId>
        <version>1.9.0</version>
    </dependency>	
    <dependency>
        <groupId>ru.croc.ctp</groupId>
        <artifactId>jxfw-async</artifactId>
        <version>1.9.0</version>
    </dependency>
    <dependency>
        <groupId>ru.croc.ctp</groupId>
        <artifactId>jxfw-export-poi</artifactId>
        <version>1.9.0</version>
    </dependency>
<!--            <dependency>-->
<!--                <groupId>org.testng</groupId>-->
<!--                <artifactId>testng</artifactId>-->
<!--                <version>RELEASE</version>-->
<!--                <scope>compile</scope>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>org.testng</groupId>-->
<!--                <artifactId>testng</artifactId>-->
<!--                <version>RELEASE</version>-->
<!--                <scope>compile</scope>-->
<!--            </dependency>-->
    <!--            <dependency>-->
<!--                <groupId>org.testng</groupId>-->
<!--                <artifactId>testng</artifactId>-->
<!--                <version>RELEASE</version>-->
<!--                <scope>compile</scope>-->
<!--            </dependency>-->
</dependencies>
<build>
    <plugins>
        <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
                <execution>
                    <goals>
                        <goal>repackage</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <classifier>${cmf.dms.classifier}-${transformer.type}</classifier>
                <jvmArguments>
                    -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005
                </jvmArguments>
                <mainClass>ru.croc.ctp.cmf.demodms.Application</mainClass>
                <excludes>
                    <exclude>
                        <groupId>ru.croc.ctp</groupId>
                        <artifactId>cass-jpa-compile</artifactId>
                    </exclude>
                    <exclude>
                        <groupId>ru.croc.ctp</groupId>
                        <artifactId>jxfw-solr-compile</artifactId>
                    </exclude>
                </excludes>
            </configuration>
        </plugin>
        <plugin>
            <groupId>org.eclipse.xtend</groupId>
            <artifactId>xtend-maven-plugin</artifactId>
        </plugin>
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <executions>
                <execution>
                    <id>install npm dependencies</id>
                    <phase>compile</phase>
                    <goals>
                        <goal>exec</goal>
                    </goals>
                    <configuration>
                        <executable>npm</executable>
                        <commandlineArgs>install ${npm.install.args}</commandlineArgs>
                        <workingDirectory>wc</workingDirectory>
                    </configuration>
                </execution>
                <execution>
                    <id>build js</id>
                    <phase>prepare-package</phase>
                    <goals>
                        <goal>exec</goal>
                    </goals>
                    <configuration>
                        <executable>grunt</executable>
                        <workingDirectory>wc</workingDirectory>
                        <arguments>
                            <argument>${cmf.dms.grunt.build.args}</argument>
                        </arguments>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        <plugin>
            <groupId>ru.croc.ctp</groupId>
            <artifactId>modelgen-maven-plugin</artifactId>
        </plugin>
        <plugin>
            <groupId>ru.croc.ctp</groupId>
            <artifactId>wcgen-maven-plugin</artifactId>
            <executions>
                <execution>
                    <id>jsModel</id>
                    <goals>
                        <goal>jsModel</goal>
                    </goals>
                    <configuration>
                        <jsModelMetaFileName>metadata.js</jsModelMetaFileName>
                        <outputDirectory/>
                        <sourceDirectory/>
                        <testSourceDirectory/>
                    </configuration>
                </execution>
                <execution>
                    <id>generateFacade</id>
                    <configuration>
                        <excludeRegexps>ru.croc.ctp.cmf.content.*</excludeRegexps>
                        <!--  <includeFiles>XFWModel,XFWModel_ctp-scheduler</includeFiles> -->
                    </configuration>                            
                </execution>
            </executions>
        </plugin>                		
        <plugin>
            <groupId>com.mysema.maven</groupId>
            <artifactId>apt-maven-plugin</artifactId>
        </plugin>

        <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
                <failOnMissingWebXml>false</failOnMissingWebXml>
                <attachClasses>true</attachClasses>
                <primaryArtifact>false</primaryArtifact>
            </configuration>
        </plugin>

        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
                <execution>
                    <id>timestamp-property</id>
                    <goals>
                        <goal>timestamp-property</goal>
                    </goals>
                    <configuration>
                        <name>deployment.build.timestamp</name>
                        <pattern>yyyyMMdd'T'HHmmss</pattern>
                        <timeZone>GMT</timeZone>
                        <locale>en_US</locale>
                    </configuration>
                </execution>
                <execution>
                    <id>create-deployment.artifact.version</id>
                    <goals>
                        <goal>regex-property</goal>
                    </goals>
                    <configuration>
                        <name>deployment.artifact.version</name>
                        <value>${cmf.version}</value>
                        <regex>-SNAPSHOT</regex>
<!--                                <replacement>-SNAPSHOT-${deployment.build.timestamp}</replacement>-->
                        <failIfNoMatch>false</failIfNoMatch>
                    </configuration>
                </execution>
                <execution>
                    <id>create-dependency.artifact.version</id>
                    <goals>
                        <goal>regex-property</goal>
                    </goals>
                    <configuration>
                        <name>dependency.artifact.version</name>
                        <value>${cmf.version}</value>
                        <regex>.*-SNAPSHOT</regex>
                        <replacement>~${cmf.version}</replacement>
                        <failIfNoMatch>false</failIfNoMatch>
                    </configuration>
                </execution>
            </executions>
        </plugin>

        <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
                <execution>
                    <!-- Формируем package.json на основе шаблона. -->
                    <id>resolve_templates</id>
                    <phase>generate-resources</phase>
                    <goals>
                        <goal>copy-resources</goal>
                    </goals>
                    <configuration>
                        <resources>
                            <resource>
                                <directory>wc/buildresources/templates</directory>
                                <includes>
                                    <include>package.json.template</include>
                                </includes>
                                <filtering>true</filtering>
                            </resource>
                        </resources>
                        <outputDirectory>${templates.output}</outputDirectory>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
                <execution>
                    <!-- Копируем сформированный package.json в проект. -->
                    <id>copy_resolved_templates</id>
                    <phase>generate-resources</phase>
                    <goals>
                        <goal>run</goal>
                    </goals>
                    <configuration>
                        <target name="update resolved templates">
                            <copy file="${templates.output}/package.json.template"
                                tofile="${project.basedir}/wc/package.json" overwrite="true" />
                        </target>
                    </configuration>
                </execution>
            </executions>
        </plugin>
    </plugins>
</build>

<profiles>
    <profile>
        <!--Repackage with Aspose -->
        <id>aspose</id>
        <activation>
            <property>
                <name>!jod</name>
            </property>
        </activation>
        <properties>
            <transformer.type>aspose</transformer.type>
        </properties>
        <dependencies>
            <dependency>
                <groupId>ru.croc.ctp.cmf</groupId>
                <artifactId>cmf-transform-worker-aspose</artifactId>
                <version>${cmf.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>ru.croc.ctp.cmf</groupId>
                <artifactId>cmf-aspose-starter</artifactId>
                <version>${cmf.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>ru.croc.ctp.cmf</groupId>
                <artifactId>cmf-aspose-license-croc</artifactId>
                <version>${cmf.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.aspose</groupId>
                <artifactId>aspose-words</artifactId>
                <classifier>jdk17</classifier>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.aspose</groupId>
                <artifactId>aspose-pdf</artifactId>
                <scope>compile</scope>
            </dependency>
        </dependencies>
    </profile>

    <profile>
        <!--Repackage with JodConverter -->
        <id>jod</id>
        <activation>
            <property>
                <name>jod</name>
            </property>
        </activation>
        <properties>
            <transformer.type>jod</transformer.type>
        </properties>
<!--                <dependencies>-->
<!--                    <dependency>-->
<!--                        <groupId>ru.croc.ctp.cmf</groupId>-->
<!--                        <artifactId>cmf-transform-worker-jod</artifactId>-->
<!--                        <version>${cmf.version}</version>-->
<!--                        <scope>runtime</scope>-->
<!--                    </dependency>-->
<!--                </dependencies>-->
    </profile>

    <profile>
        <id>checks</id>
        <activation>
            <activeByDefault>true</activeByDefault>
        </activation>
        <build>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <inherited>true</inherited>
                </plugin>
                <plugin>
                    <groupId>com.github.spotbugs</groupId>
                    <artifactId>spotbugs-maven-plugin</artifactId>
                    <inherited>true</inherited>
                </plugin>
            </plugins>
        </build>
    </profile>

    <profile>
        <id>javadoc</id>
        <build>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <inherited>true</inherited>
                </plugin>
            </plugins>
        </build>
    </profile>

    <profile>
        <id>sources</id>
        <build>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <inherited>true</inherited>
                </plugin>
            </plugins>
        </build>
    </profile>

    <!-- Запуск unit тестов UI -->
    <!-- Отключается вместе с запуском остальных unit тестов. -->
    <profile>
        <id>uiunittests</id>
        <activation>
            <property>
                <name>!skipTests</name>
            </property>
        </activation>

        <build>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>UI Unit Tests</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>grunt</executable>
                                <arguments>
                                    <argument>test</argument>
                                </arguments>
                                <workingDirectory>wc</workingDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    </profile>


    <!-- Только для конфигурации Eclipse -->
    <profile>
        <id>eclipse</id>
        <activation>
            <property>
                <name>m2e.version</name>
            </property>
        </activation>
        <build>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>add-source</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.build.directory}/generated-sources/wcgen/</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>install npm dependencies</id>
                            <phase>none</phase>
                            <configuration>
                                <skip>true</skip>
                            </configuration>
                        </execution>
                        <execution>
                            <id>build js</id>
                            <phase>none</phase>
                            <configuration>
                                <skip>true</skip>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    </profile>

    <profile>
        <id>dev</id>
        <properties>
            <cmf.dms.classifier>dev</cmf.dms.classifier>
            <cmf.dms.grunt.build.args />
        </properties>
    </profile>
    <profile>
        <id>not_eclipse</id>
        <activation>
            <property>
                <name>!m2e.version</name>
            </property>
        </activation>
        <build>
            <plugins>
                <!-- Это нельзя выполнять в eclipse, т.к. каталог уже добавляется как каталог с исходными текстами xtend
                    plugin'ом. -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>add-model-resource</id>
                            <goals>
                                <goal>add-resource</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>${project.build.directory}/generated-sources/xtend</directory>
                                        <includes>
                                            <include>model/*.ecore</include>
                                        </includes>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    </profile>
    <profile>
        <id>npmlinkinit</id>
        <activation>
            <property>
                <name>!skipNpmLink</name>
            </property>
            <file>
                <missing>wc/node_modules</missing>
            </file>
        </activation>
        <build>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>npm_install_linklocal</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>npm</executable>
                                <commandlineArgs>install linklocal --no-save</commandlineArgs>
                                <workingDirectory>wc</workingDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    </profile>
    <profile>
        <id>npmlink</id>
        <activation>
            <property>
                <name>!skipNpmLink</name>
            </property>
        </activation>
        <build>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>npm_links</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>npm</executable>
                                <commandlineArgs>run links</commandlineArgs>
                                <workingDirectory>wc</workingDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    </profile>
</profiles>

</project>